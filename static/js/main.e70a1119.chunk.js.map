{"version":3,"sources":["Components/lamp.js","Pages/home.js","Pages/info.js","Components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Lamp","changeBackground","light","id","onChange","type","name","value","htmlFor","Icon","size","className","style","background","boxShadow","content","top","left","width","height","borderRadius","border","position","Home","color","useState","setPosition","delay","setDelay","lyrics","setLyrics","useEffect","length","setNewRace","setStartRace","setRaceCompleted","wordCount","setWordCount","startRace","timer","setTimer","callback","savedCallback","useRef","current","setInterval","clearInterval","useInterval","newRace","input","setInput","artist","setArtist","track","setTrack","raceCompleted","error","setError","handleChange","e","target","wpm","Math","round","typedArray","map","line","i","push","renderLines","Form","Control","marginLeft","prev","split","onSubmit","preventDefault","fetch","then","resp","json","data","splitLyrics","trim","filter","placeholder","Button","variant","onClick","Info","to","href","NavBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","App","lightMode","setlightMode","document","body","backgroundColor","setLight","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e70a1119.chunk.js","sourcesContent":["import React from 'react'\nimport { Icon } from 'semantic-ui-react'\n\nexport const Lamp = ({changeBackground, light}) => {\n\n    let bulb = {\n        background:'rgb(255, 255, 255, 1)',\n        boxShadow:'4px 4px 20px rgba(255,255,255, .8)',\n        content:'',\n        top:'5rem',\n        left:\"-1.5rem\",\n        width:'3.9rem',\n        height:'3.9rem',\n        borderRadius:'50%',\n        border:'.2rem solid rgba(255,255,255,0.05)',\n        position: 'absolute',\n    }\n\n    return(\n        <div id=\"lamp\" onChange={changeBackground}>\n                <input type=\"radio\" name=\"switch\" value=\"on\" />\n                <input type=\"radio\" name=\"switch\" value=\"off\" />\n                <label htmlFor=\"switch\"><Icon size='huge' name='lightbulb outline'></Icon></label>\n                <div className=\"lamp\">\n                    {light ? <div style={bulb}></div> : null }\n                    <div className=\"gonna-give-light\"></div>\n                </div>\n            </div>\n    )\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form } from 'react-bootstrap/'\nimport '../lamp.css'\nimport { Lamp } from '../Components/lamp'\n\n\nexport const Home = ({changeBackground, light, color}) => {\n\n    const [ position, setPosition ] = useState(0);\n    const [ delay, setDelay] = useState(1000)\n    const [ lyrics, setLyrics ] = useState(['hi']);\n    useEffect(() => {\n        if(position === lyrics.length){\n            setDelay(null)\n            setNewRace(false)\n            setStartRace(false)\n            setRaceCompleted(true)\n        }\n    },[position, lyrics])\n    const [ wordCount, setWordCount] = useState(0);\n    const [ startRace, setStartRace ] = useState(false);\n    const [ timer, setTimer ] = useState(0);\n    useInterval(() => {\n        if(startRace){\n            setTimer(timer + 1);\n        };\n    }, delay);\n    const [ newRace, setNewRace ] = useState(false);\n    const [ input, setInput ] = useState('');\n    const [ artist, setArtist ] = useState('');\n    const [ track, setTrack ] = useState('');\n    const [ raceCompleted, setRaceCompleted] = useState(false);\n    const [ error, setError] = useState(false)\n    \n\n    const handleInput = (e) => {\n        setInput(e.target.value);\n        if( input ===  lyrics[position] ){\n            setWordCount((prev) => prev += lyrics[position].split(' ').length);\n            setPosition(position + 1);\n            setInput('');\n        };\n    }\n\n    const handleChange = (e) => {\n        e.target.name === 'artist' ? setArtist(e.target.value) : setTrack(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        fetch(`https://api.lyrics.ovh/v1/${artist}/${track}`)\n        .then(resp => resp.json())\n        .then(data => {\n            if(data.lyrics === \"\"){\n                setError(true)\n                return\n            };\n            const splitLyrics = data.lyrics.split(/\\r?\\n/).map(line => line.trim()).filter(line => line !== \"\");\n            setLyrics(splitLyrics);\n            setNewRace(false);\n            setStartRace(true);\n            setDelay(1000);\n            setError(false)\n        })\n    }\n\n    const reset = () => {\n        setPosition(0);\n        setWordCount(0);\n        setTimer(0);\n        setInput('');\n        setArtist('');\n        setTrack('');\n        setNewRace(false);\n        setLyrics(['hi']);\n        setStartRace(false);\n        setRaceCompleted(false);\n    }\n\n    const renderLines = () => {\n        let typedArray = []\n        lyrics.map((line, i) => {\n            if(position > i){\n                return typedArray.push(line)\n            }\n        })\n\n    return typedArray.map((line,i) => {\n        let name = i % 2 === 0 ? 'typed-line-right' : 'typed-line-left'\n        return <div className={name}>{line}</div>\n    })\n    }\n    \n\n    let wpm = Math.round((wordCount / timer) * 60) || \"\";\n    return(\n        <>\n        <Lamp changeBackground={changeBackground} light={light}/>\n        <div className='prev-words'>{renderLines()}</div>\n            { startRace ?\n            <>\n                <div className='words-to-type'>{lyrics[position]}</div>\n                <Form className='typing-input'>\n                    <Form.Control style={{width:'700px', marginLeft: '-116px'}} size='lg' type='text' onChange={handleInput} value={input}/>\n                </Form>\n                <div className='wpm'>{wpm}</div>\n                <div className='wpm-corner'>{wpm}</div>\n            </>\n                : newRace ?\n                <Form className='song-form' onSubmit={handleSubmit}>\n                    <Form.Control size='lg' onChange={handleChange} placeholder=\"Artist\" type='text' value={artist} name='artist'/>\n                    <Form.Control size='lg' onChange={handleChange} placeholder=\"Track\" type='text' value={track} name='track'/>\n                    <Button style={color} variant='dark' size='lg' type='submit'>Start</Button>\n                    { error ? <div className='error'>Oops, I either don't know this song, or this song doesn't exist. Please try again.</div> : null } \n                </Form>\n                    : raceCompleted ?\n                    <div className='final-words'> Nice, you just wrote out the song {track} by {artist} in {wpm} words per minute!<br></br> <Button size='lg' variant='dark' style={color} onClick={reset}>reset</Button></div>\n                        : <div className='race-btn'><Button style={color} size='lg' variant='dark' onClick={() => setNewRace(true)}>Start a new Race</Button></div>\n            }\n        </>\n    )\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    const tick = () => {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap/'\n\n\nexport const Info = ({color}) => {\n    return (\n        <>\n        <div className='info'>\n            <h2>How to play</h2>\n            <p>The idea of the game is quite simple, All you need to do is input an Artist and a Track.\n                If it exists (or if I have it) you will begin your race! Once you finished typing a line\n                just hit 'space' and then the next line will appear. Boom done ezpz. Also, those number popping\n                up on the bottom of the screen in the lightbulb are your Words Per Minute. So type fast! And remember\n                this isn't about having fun. It's about getting good. ;)\n            </p>\n        </div>\n        <div className='page-btn'>\n            <Link to='/home'>\n            <Button style={color} size='lg' variant='dark'>Next page</Button>\n            </Link>\n        </div>\n        <p className='questions'>Comments, concerns, compliments, criticisms, or any word that starts with 'C' can Tweet me <a href='https://twitter.com/IgnasButautas'>here.</a> Also, if you're lovin' that light you can check out Hornebom's creation <a href='https://codepen.io/Hornebom/pen/clDsr'>here</a></p>\n        </>\n    )\n\n}\n\n","import Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nconst NavBar = ({color}) => {\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand style={color}>Keyboard Warrior</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href='/KeyboardWarrior/' style={color}>Home</Nav.Link>\n            <Nav.Link href='/KeyboardWarrior/info' style={color}>Info</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n}\n\nexport default NavBar","import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\nimport { Home } from './Pages/home'\nimport { Info } from './Pages/info'\nimport  Navbar  from './Components/navbar'\n\n\n\n\nconst App = () => {\n  const [lightMode, setlightMode] = useState(true)\n  useEffect(() => {\n    lightMode ? document.body.style.color = 'rgb(0, 0, 0, 1)' : document.body.style.color = 'rgb(153, 255, 204, 1)'\n    lightMode ? document.body.style.backgroundColor = 'rgb(153, 255, 204, 0.5)' : document.body.style.backgroundColor = 'rgb(0, 0, 0, 0.7)'\n  },[lightMode])\n  const [ light, setLight ] = useState(true)\n\n  const changeBackground = () => {\n    setlightMode(!lightMode)\n    setLight(!light)\n  }\n\n\n  let color = lightMode ? null : { color:'rgb(153, 255, 204, 1)' }\n  return (\n        <div className=\"App\">\n          <div className='navbar-div'>\n          <Navbar color={color}/>\n          </div>\n          <Switch>\n            <Route exact path='/info' component={() => <Info color={color}/>}/>\n            <Route path='/' component={() => <Home changeBackground={changeBackground} light={light} color={color} />}/>\n          </Switch>\n        </div>\n      );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(\n    <Router basename='/KeyboardWarrior'>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}